name: Trigger Lambda on CSV Update

on:
  push:
    paths:
      - 'data.csv'  # Watch for changes to the CSV file

jobs:
  trigger-lambda:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get install -y jq curl

    - name: Extract new entries from CSV
      id: extract_entries
      run: |
        # Extract entries from the CSV file
        new_entries=$(tail -n +2 data.csv | jq -R -s -c 'split("\n") | map(split(",") | {name: .[0], email: .[1]})')
        echo "::set-output name=new_entries::$new_entries"

    - name: Send data to Lambda
      env:
        LAMBDA_FUNCTION_URL: ${{ secrets.LAMBDA_FUNCTION_URL }}
        LAMBDA_FUNCTION_API_KEY: ${{ secrets.LAMBDA_FUNCTION_API_KEY }}
      run: |
        # Ensure new_entries is correctly parsed
        new_entries="${{ steps.extract_entries.outputs.new_entries }}"
        
        # Convert new_entries to an array
        echo "$new_entries" | jq -c '.[]' | while read -r entry; do
          name=$(echo "$entry" | jq -r '.name')
          email=$(echo "$entry" | jq -r '.email')

          # Handle null values for name and email
          if [ "$name" = "null" ]; then name=""; fi
          if [ "$email" = "null" ]; then email=""; fi

          # Send the data to the Lambda function
          curl -X POST $LAMBDA_FUNCTION_URL \
            -H "Content-Type: application/json" \
            -H "x-api-key: $LAMBDA_FUNCTION_API_KEY" \
            -d '{"userName": "'"$name"'", "email": "'"$email"'"}'
        done
